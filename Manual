## **Инструкция по работе с Git**

### Установка Git

Для того, чтобы установить Git достаточно перейти на официальный сайт и следовать инструкции.

### Структура директории Git

В данной директории будет содержаться вся конфигурация Git и история проекта. При желании можно править эти файлы вручную, внося необходимые изменения в историю проекта.

* **config** (в данном файле содержатся настройки Git репозитория. Например, здесь можно хранить email и имя пользователя.);
* **description** (данный файл предназначен для GitWeb и содержит в себе информацию о проекте);
* **hooks** (в этом каталоге Git предоставляет набор скриптов, которые могут автоматически запускаться во время выполнения git команд.);
* **info - exclude** (каталог info содержит файл exclude, в котором можно указывать любые файлы, и Git не станет добавлять их в свою историю. );
* **refs** (этот каталог хранит в себе копию ссылок на объекты коммитов в локальных и удаленных ветках.);
* **logs** (этот каталог хранит в себе историю проекта для всех веток в вашем проекте.)
* **objects** (этот каталог хранит в себе BLOB объекты, каждый из которых проиндексирован уникальным SHA.);
* **index** (в эту область попадают файлы, над которыми вы работали, при выполнение команды git add);
* **HEAD** (файл содержит ссылку на текущую ветку, в которой вы работаете) и т.д.

### Самые распространённые команды в Git

* git init - команда, которая позволяет из папки сделать репозиторий;
* git diff - разница между текущим состоянием файла и его начальной версии;
* git log - посмотреть журнал всех изменений;
* git checkout - команда, которая позволяет перемещаться между сохранениями;
* git branch - команда, которая позволяет выводить список веток;
* git merge - "слияние";
* git branch new_branch_name - создание новой ветки;
* git commit -m "текст сообщения" - сохраняет текущее состояние;
* git checkout -b reserve - создание и переключение на новую ветку;
* git merge --abort - делает откат конфликта, но его не решает;
* git log --merges - можно посмотреть, когда было слияние веток и т.д. 


### Ветвление в Git

Ветвление означает, что у вас есть возможность работать над разными версиями проекта. Основная ветка называется master, при создании дополнительной ветки используют команду *git branch branch_name*. Звёздочкой Git указывает на текущую ветку, в которой мы работаем. Для того чтобы переключиться на другую ветку используют команду *git checkout branch_name*.

### Работа с удалёнными репозиториями